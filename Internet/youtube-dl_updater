#!/bin/sh

# Script by www.seguridadwireless.net

SCRIPT_VERSION=20160602

############################################################
## Funciones comunes. Su nombre empieza por f_ ##
############################################################
f_variables(){
	. /opt/wifislax-updaters/Funciones/funciones_updater
}

############################################################
## Funciones propias del script. Su nombre empieza por F_ ##
############################################################
# Definicion de variables
F_variables() {
	PRGNAM=youtube-dl
	echo -ne "\033]2;${PRGNAM}_updater\007"
	WEB=https://github.com/rg3/youtube-dl
	VERSION=`curl -s $WEB/releases|grep  tar.gz|head -1|cut -d- -f2|cut -d t -f1|cut -d / -f3|sed "s/.$//g"`
	EXTENSION=tar.gz
	SOURCES=$VERSION.$EXTENSION
	DOWNLOAD=$WEB/archive/$SOURCES
}

# Descomprimimos el fichero descargado y compilamos
F_compilar(){
#########################
### Generamos parche ####
#########################
cat > setup.patch << "EOF"
--- youtube-dl-2015.05.20/Makefile.orig	2015-05-25 04:09:16.056234902 +0300
+++ youtube-dl-2015.05.20/Makefile	2015-05-25 04:13:42.180907886 +0300
@@ -50,7 +50,7 @@
 
 .PHONY: all clean install test tar bash-completion pypi-files zsh-completion fish-completion ot offlinetest codetest supportedsites
 
-pypi-files: youtube-dl.bash-completion README.txt youtube-dl.1 youtube-dl.fish
+pypi-files: youtube-dl.bash-completion README.md youtube-dl.1 youtube-dl.fish
 
 youtube-dl: youtube_dl/*.py youtube_dl/*/*.py
 	zip --quiet youtube-dl youtube_dl/*.py youtube_dl/*/*.py
@@ -70,11 +70,11 @@
 	$(PYTHON) devscripts/make_supportedsites.py docs/supportedsites.md
 
 README.txt: README.md
-	pandoc -f markdown -t plain README.md -o README.txt
+	#pandoc -f markdown -t plain README.md -o README.txt
 
 youtube-dl.1: README.md
 	$(PYTHON) devscripts/prepare_manpage.py youtube-dl.1.temp.md
-	pandoc -s -f markdown -t man youtube-dl.1.temp.md -o youtube-dl.1
+	#pandoc -s -f markdown -t man youtube-dl.1.temp.md -o youtube-dl.1
 	rm -f youtube-dl.1.temp.md
 
 youtube-dl.bash-completion: youtube_dl/*.py youtube_dl/*/*.py devscripts/bash-completion.in
@@ -92,7 +92,7 @@
 
 fish-completion: youtube-dl.fish
 
-youtube-dl.tar.gz: youtube-dl README.md README.txt youtube-dl.1 youtube-dl.bash-completion youtube-dl.zsh youtube-dl.fish
+youtube-dl.tar.gz: youtube-dl README.md youtube-dl.1 youtube-dl.bash-completion youtube-dl.zsh youtube-dl.fish
 	@tar -czf youtube-dl.tar.gz --transform "s|^|youtube-dl/|" --owner 0 --group 0 \
 		--exclude '*.DS_Store' \
 		--exclude '*.kate-swp' \
@@ -105,7 +105,7 @@
 		--exclude 'docs/_build' \
 		-- \
 		bin devscripts test youtube_dl docs \
-		LICENSE README.md README.txt \
+		LICENSE README.md \
 		Makefile MANIFEST.in youtube-dl.1 youtube-dl.bash-completion \
 		youtube-dl.zsh youtube-dl.fish setup.py \
 		youtube-dl
--- youtube-dl-2015.05.20/setup.orig.py	2015-05-25 04:08:00.477179771 +0300
+++ youtube-dl-2015.05.20/setup.py	2015-05-25 04:18:55.835986658 +0300
@@ -46,10 +46,8 @@
     params = py2exe_params
 else:
     files_spec = [
-        ('etc/bash_completion.d', ['youtube-dl.bash-completion']),
-        ('etc/fish/completions', ['youtube-dl.fish']),
-        ('share/doc/youtube_dl', ['README.txt']),
-        ('share/man/man1', ['youtube-dl.1'])
+        ('/etc/bash_completion.d', ['youtube-dl.bash-completion']),
+        ('/etc/fish/completions', ['youtube-dl.fish']),
     ]
     root = os.path.dirname(os.path.abspath(__file__))
     data_files = []

EOF

echo 
echo "$VERDE"Aplicando patch ..."$CIERRE"
sleep 1
patch -p1 < setup.patch || exit 1

echo 
echo "$VERDE"Compilando ..."$CIERRE"
sleep 1

make  || exit 1
python setup.py install --root=$PKG

chmod 0755 $PKG/etc/bash_completion.d/${PRGNAM}.bash-completion
chmod 0755 $PKG/etc/fish/completions/${PRGNAM}.fish

}

###################################
## BLOQUE PRINCIPAL DE EJECUCION ##
###################################
# Si se cierra el script inesperadamente, ejecutar la funcion de limpieza
trap f_exitmode SIGHUP SIGINT

#Inicializamos las variables globales
f_variables
#Comprobamos conexion a Internet
f_comprobarConexion
#Inicializamos las variables del script
F_variables
#Creamos directorio de trabajo
f_directorioTemporal
#Mostramos el mensaje de presentacion
f_presentacion
#Comprobamos updates del script
f_comprobarUpdates
#Asignamos o detectamos arquitectura
f_arquitectura
#Comprobamos version instalada del paquete
f_versionInstalada
#Si no existe el fichero se descargara
f_download
#Preparar entorno
f_preparar
#Descomprimir fichero descargado y compilamos
F_compilar
#Hacemos strip sobre el paquete
f_strip
#Creamos xzm , instalamos y salimos
f_tareasFinales