#!/bin/bash

# Script by www.seguridadwireless.net

SCRIPT_VERSION=20150829

############################################################
## Funciones comunes. Su nombre empieza por f_ ##
############################################################
f_variables(){
	. /opt/wifislax-updaters/Funciones/funciones_updater
}

############################################################
## Funciones propias del script. Su nombre empieza por F_ ##
############################################################
#Definicion de variables
F_variables() {
	WEB=http://sourceforge.net/projects/qbittorrent/files/
	VERSION=`curl -s $WEB | grep /latest | cut -d '/' -f 8 | cut -d ":" -f 1 | cut -d '-' -f 2`
	PRGNAM=qbittorrent
	echo -ne "\033]2;${PRGNAM}_updater\007"
}

# Comprobar dependencias
F_dependencias() {
	if [ -f /usr/lib/libtorrent-rasterbar.so ]; then
	      EXIST=`echo "$VERDE"Instalada"$CIERRE"`
	else
	      EXIST=`echo "$ROJO"No Instalada"$CIERRE"`
	fi
	
	echo "$ROSA"Comprobando dependencias ..."$CIERRE"
	sleep 3
	echo "$CYAN"Dependencias de este paquete:""
	echo ""
	echo "$AMARILLO"libtorrent-rasterbar"$CIERRE: $EXIST"
	
	if [ ! -f /usr/lib/libtorrent-rasterbar.so ]; then
	      echo ""
	      echo ""$ROJO"No se cumplen los requisitos"$CIERRE"... "$VERDE"resolviendo"$CIERRE"..."
	      sleep 3
	      cd /opt/wifislax-updaters/Librerias/
		statusfile=$(mktemp)
		xterm -e sh -c '/opt/wifislax-updaters/Librerias/libtorrent-rasterbar_updater; echo $? > '$statusfile 
		status=$(cat $statusfile)
		rm $statusfile
		if [ -z $status ] || [ $status != "0" ]; then
		  echo "$ROJO"ERROR. No se ha podido crear el paquete"$CIERRE"
		  if [ -z $status ]; then
		    exit 1
		  else
		    exit $status
		  fi
		fi
		
		cd $TMP
	else
	      echo ""
	      echo "$VERDE"Bien ..podemos continuar"$CIERRE"
	      echo ""
	      sleep 3
	fi
}

# Si el paquete no existe se descargara de internet
F_descargaPaquete() {
	if [ ! -f $PRGNAM-$VERSION.tar.gz ]; then
	echo ""
	echo "$CYAN"Descargando sources de $PRGNAM-$VERSION"$CIERRE"
	sleep 3
	aria2c -x 3 ${WEB}$PRGNAM-$VERSION.tar.gz
	fi
}

#Descomprime el fichero descargado
F_descomprime() {
	echo ""
	echo "$VERDE"Descomprimiendo ..."$CIERRE"
	sleep 3
	rm -rf $PRGNAM-$VERSION
	tar xvf $PRGNAM-$VERSION.tar.gz
	cd $PRGNAM-$VERSION
	chown -R root:root .
	find -L . \
	\( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
	  -o -perm 511 \) -exec chmod 755 {} \; -o \
	\( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
	-o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;
}

#Configurando
F_compilar() {
echo ""
echo "$VERDE"Configurando ..."$CIERRE"
sleep 3

./bootstrap.sh \

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \

./configure \
--prefix=/usr

make -j$NUCLEOS
make install INSTALL_ROOT=$PKG
}


###################################
## BLOQUE PRINCIPAL DE EJECUCION ##
###################################
# Si se cierra el script inesperadamente, ejecutar la funcion de limpieza
trap f_exitmode SIGHUP SIGINT

#Inicializamos las variables globales
f_variables
#Comprobamos conexion a Internet
f_comprobarConexion
#Inicializamos las variables del script
F_variables
#Creamos directorio de trabajo
f_directorioTemporal
#Mostramos el mensaje de presentacion
f_presentacion
#Comprobamos updates del script
f_comprobarUpdates
#Asignamos o detectamos arquitectura
f_arquitectura
# Comprobar dependencias
F_dependencias
#Comprobamos version instalada del script
f_versionInstalada
#Descargamos el paquete si no existe
F_descargaPaquete
#Descomprimimos el paquete descargado 
F_descomprime
#Compilamos el paquete
F_compilar
#Hacemos strip sobre el paquete
f_strip
#Creamos xzm , instalamos y salimos
f_tareasFinales
