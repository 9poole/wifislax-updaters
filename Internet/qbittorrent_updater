#!/bin/bash

# Script by www.seguridadwireless.net

SCRIPT_VERSION=20151015

############################################################
## Funciones comunes. Su nombre empieza por f_ ##
############################################################
f_variables(){
	. /opt/wifislax-updaters/Funciones/funciones_updater
}

############################################################
## Funciones propias del script. Su nombre empieza por F_ ##
############################################################
#Definicion de variables
F_variables() {
	WEB=http://sourceforge.net/projects/qbittorrent/files/
	VERSION=`curl -s $WEB | grep /latest | cut -d '/' -f 8 | cut -d ":" -f 1 | cut -d '-' -f 2`
	PRGNAM=qbittorrent
	echo -ne "\033]2;${PRGNAM}_updater\007"
	EXTENSION=tar.gz 
	SOURCES=$PRGNAM-$VERSION.$EXTENSION
	DOWNLOAD=${WEB}$SOURCES
}

# Comprobar dependencias
F_dependencias() {
	if [ -f /usr/lib/libtorrent-rasterbar.so ]; then
	      EXIST=`echo "$VERDE"Instalada"$CIERRE"`
	else
	      EXIST=`echo "$ROJO"No Instalada"$CIERRE"`
	fi
	
	echo "$ROSA"Comprobando dependencias ..."$CIERRE"
	sleep 3
	echo "$CYAN"Dependencias de este paquete:""
	echo ""
	echo "$AMARILLO"libtorrent-rasterbar"$CIERRE: $EXIST"
	
	if [ ! -f /usr/lib/libtorrent-rasterbar.so ]; then
	      echo ""
	      echo ""$ROJO"No se cumplen los requisitos"$CIERRE"... "$VERDE"resolviendo"$CIERRE"..."
	      sleep 3
	      cd /opt/wifislax-updaters/Librerias/
		statusfile=$(mktemp)
		xterm -e sh -c 'yes y | /opt/wifislax-updaters/Librerias/libtorrent-rasterbar_updater; echo $? > '$statusfile 
		status=$(cat $statusfile)
		rm $statusfile
		if [ -z $status ] || [ $status != "0" ]; then
		  echo "$ROJO"ERROR. No se ha podido crear el paquete"$CIERRE"
		  if [ -z $status ]; then
		    exit 1
		  else
		    exit $status
		  fi
		fi
		
		cd $TMP
	else
	      echo ""
	      echo "$VERDE"Bien ..podemos continuar"$CIERRE"
	      echo ""
	      sleep 3
	fi
}

#Configurando
F_compilar() {
echo ""
echo "$VERDE"Configurando ..."$CIERRE"
sleep 3

./bootstrap.sh \

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \

./configure \
--prefix=/usr

make  || exit 1
make install INSTALL_ROOT=$PKG
}


###################################
## BLOQUE PRINCIPAL DE EJECUCION ##
###################################
# Si se cierra el script inesperadamente, ejecutar la funcion de limpieza
trap f_exitmode SIGHUP SIGINT

#Inicializamos las variables globales
f_variables
#Comprobamos conexion a Internet
f_comprobarConexion
#Inicializamos las variables del script
F_variables
#Creamos directorio de trabajo
f_directorioTemporal
#Mostramos el mensaje de presentacion
f_presentacion
#Comprobamos updates del script
f_comprobarUpdates
#Asignamos o detectamos arquitectura
f_arquitectura
#Comprobamos version instalada del script
f_versionInstalada
# Comprobar dependencias
F_dependencias
#Descargamos el paquete si no existe
f_download
#Prepara entorno
f_preparar
#Compilamos el paquete
F_compilar
#Hacemos strip sobre el paquete
f_strip
#Creamos xzm , instalamos y salimos
f_tareasFinales
