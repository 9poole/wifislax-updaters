#!/bin/sh

# Script by www.seguridadwireless.net

SCRIPT_VERSION=20150906

############################################################
## Funciones comunes. Su nombre empieza por f_ ##
############################################################
f_variables(){
	. /opt/wifislax-updaters/Funciones/funciones_updater
}

############################################################
## Funciones propias del script. Su nombre empieza por F_ ##
############################################################
# Definicion de variables
F_variables() {
		
	echo $VERDE
	echo "Please write the languaje you want for your firefox:"
	echo
	echo "Some options are:"
	echo 
	echo "$AMARILLO English -->$VERDE en-US" 
	echo "$AMARILLO rumania -->$VERDE ro" 
	echo "$AMARILLO italian -->$VERDE it" 
	echo "$AMARILLO french  -->$VERDE fr" 
	echo "$AMARILLO deutsch -->$VERDE de"
	echo "$CYAN"
	echo "If you dont kwon what letters write to your lang"
	echo "Visit firefox homepage to see."
	echo "$AMARILLO"
	echo "Now write letters for your lang and press ENTER to continue ..."
	echo "$ROSA"
	read LANGUAGE
	echo "$BLANCO"
	PRGNAM_ORIGINAL=firefox
	PRGNAM=firefox_multi
	echo -ne "\033]2;${PRGNAM}_updater\007"
	PRGNAM2=firefox_$LANGUAGE
	WEB=http://download.cdn.mozilla.net/pub/mozilla.org/firefox/releases/latest/linux-i686/$LANGUAGE/
	VERSION=`curl -s $WEB | grep .tar.bz2 | head -n1 | cut -d- -f2- | cut -d '"' -f1 | cut -d "t" -f1 | sed "s/.$//g"`
	DOWNLOAD=${WEB}${PRGNAM_ORIGINAL}-${VERSION}.tar.bz2
}

# Creamos directorios extra
F_extradirs(){
mkdir -p $PKG/usr/{lib,bin,share/pixmaps,share/applications}
}

# Si el paquete no existe se descargara de internet
F_download(){
	if [ ! -f $PRGNAM_ORIGINAL-$VERSION.tar.bz2 ]; then
	echo ""
	echo "$CYAN"Descargando sources de $PRGNAM_ORIGINAL-$VERSION"$CIERRE"
	sleep 3
	aria2c -x 3 $DOWNLOAD
	fi
}

# Descomprimimos el fichero descargado y compilamos
F_compilar(){
echo ""
echo "$VERDE"Descomprimiendo ..."$CIERRE"
sleep 3
rm -rf $PRGNAM_ORIGINAL-$VERSION
tar xjvf $PRGNAM_ORIGINAL-$VERSION.tar.bz2
cd $PRGNAM_ORIGINAL
cp -r $TMP/$PRGNAM_ORIGINAL $PKG/usr/lib
cd $PKG


# Por si persisten restos fuera del log package
if [ -d /usr/lib/firefox ]; then
rm -rf /usr/lib/firefox
fi

LIBLIST="$(find . -name \*.so -print | rev | cut -d "/" -f1 | rev | grep -v libbrowsercomps.so | grep -v libdbusservice.so | grep -v libmozgnome.so)"

for LIB in $LIBLIST; do 
	
	(ln -s /usr/lib/firefox/$LIB ./usr/lib/$LIB)
done

    (ln -s /usr/lib/firefox/firefox ./usr/bin/firefox)
    (ln -s /usr/lib/firefox/firefox ./usr/bin/mozilla-firefox.desktop)
    
cp $TMP/firefox/browser/icons/mozicon128.png $PKG/usr/share/pixmaps/firefox.png

echo "[Desktop Entry]
Encoding=UTF-8
Exec=firefox %u
Icon=firefox
Type=Application
Categories=Application;Network;
Name=Firefox
GenericName[es]=Navegador Web
GenericName=Web Browser
MimeType=text/html
StartupNotify=false" > $PKG/usr/share/applications/mozilla-firefox.desktop
}

###################################
## BLOQUE PRINCIPAL DE EJECUCION ##
###################################
# Si se cierra el script inesperadamente, ejecutar la funcion de limpieza
trap f_exitmode SIGHUP SIGINT

#Inicializamos las variables globales
f_variables
#Comprobamos conexion a Internet
f_comprobarConexion
#Inicializamos las variables del script
F_variables
#Creamos directorio de trabajo
f_directorioTemporal
# Creamos directorios extra
F_extradirs
#Mostramos el mensaje de presentacion
f_presentacion
#Comprobamos updates del script
f_comprobarUpdates
#Asignamos o detectamos arquitectura
f_arquitectura i686
#Comprobamos version instalada del script
f_versionInstalada
#Si no existe el fichero se descargara
F_download
#Descomprimir fichero descargado y compilamos
F_compilar
#Hacemos strip sobre el paquete
f_strip
#Creamos xzm , instalamos y salimos
f_tareasFinales
