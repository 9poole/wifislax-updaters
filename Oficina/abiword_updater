#!/bin/sh

# Script by www.seguridadwireless.net

SCRIPT_VERSION=20150502

############################################################
## Funciones comunes. Su nombre empieza por f_ ##
############################################################
f_variables(){
	. /opt/wifislax-updaters/Funciones/funciones_updater
}

############################################################
## Funciones propias del script. Su nombre empieza por F_ ##
############################################################
# Definicion de variables
F_variables() {
	WEB=http://www.abisource.com/downloads/abiword/
	VERSION=`curl -s $WEB | grep . | tail -7 | cut -d " " -f5 | cut -d '"' -f 2 | head -1 | sed "s/.$//g"`
	PRGNAM=abiword
	echo -ne "\033]2;${PRGNAM}_updater\007"
}

# Si el paquete no existe se descargara de internet
F_download(){
	if [ ! -f $PRGNAM-$VERSION.tar.gz ]; then
	echo ""
	echo "$CYAN"Descargando sources de $PRGNAM-$VERSION"$CIERRE"
	sleep 3
	aria2c -x 3 $WEB/$VERSION/source/$PRGNAM-$VERSION.tar.gz
	fi
}

# Descomprimimos el fichero descargado y compilamos
F_compilar(){
echo ""
echo "$VERDE"Descomprimiendo ..."$CIERRE"
sleep 3
tar xvf $PRGNAM-$VERSION.tar.gz
cd $PRGNAM-$VERSION
chown -R root:root .
find -L . \
  \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 -o -perm 511 \) \
  -exec chmod 755 {} \; -o \
  \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
  -exec chmod 644 {} \;

# Generamos parche y aplicamos
if [ $VERSION = "3.0.0" ]; then
cat > fix-segfault-on-save-pdf.patch << "EOF"
Index: src/text/fmt/gtk/fv_UnixSelectionHandles.cpp
===================================================================
--- src/text/fmt/gtk/fv_UnixSelectionHandles.cpp	(revision 33659)
+++ src/text/fmt/gtk/fv_UnixSelectionHandles.cpp	(revision 33662)
@@ -36,42 +36,60 @@
 
 	mode = _fv_text_handle_get_mode (handle);
 
-	if (pos == FV_TEXT_HANDLE_POSITION_SELECTION_START)
+	if (pos == FV_TEXT_HANDLE_POSITION_SELECTION_START) {
 		handles->updateSelectionStart ((UT_sint32)x, (UT_sint32)y);
+        }
 	else {
-		if (mode == FV_TEXT_HANDLE_MODE_SELECTION)
+		if (mode == FV_TEXT_HANDLE_MODE_SELECTION) {
 			handles->updateSelectionEnd ((UT_sint32)x, (UT_sint32)y);
-                else
+                }
+                else {
 			handles->updateCursor((UT_sint32)x, (UT_sint32)y);
+                }
 	}
 }
 
 FV_UnixSelectionHandles::FV_UnixSelectionHandles(FV_View *view, FV_Selection selection)
 	: FV_SelectionHandles (view, selection)
+	, m_text_handle(NULL)
 {
 	XAP_Frame * pFrame = static_cast<XAP_Frame*>(m_pView->getParentData());
-	XAP_UnixFrameImpl * pFrameImpl =static_cast<XAP_UnixFrameImpl *>( pFrame->getFrameImpl());
-	GtkWidget * pWidget = pFrameImpl->getViewWidget();
+	// When saving to PDF (and printing) we don't have a frame
+	// See bug 13586
+	if (pFrame) {
+		XAP_UnixFrameImpl * pFrameImpl = static_cast<XAP_UnixFrameImpl *>(pFrame->getFrameImpl());
+		GtkWidget * pWidget = pFrameImpl->getViewWidget();
 
-	m_text_handle = _fv_text_handle_new (pWidget);
-        _fv_text_handle_set_relative_to (m_text_handle,
-                                         gtk_widget_get_window (pWidget));
-        g_signal_connect (m_text_handle, "handle-dragged",
-                          G_CALLBACK(handle_dragged_cb), this);
+		m_text_handle = _fv_text_handle_new (pWidget);
+		_fv_text_handle_set_relative_to (m_text_handle,
+						 gtk_widget_get_window (pWidget));
+		g_signal_connect (m_text_handle, "handle-dragged",
+				  G_CALLBACK(handle_dragged_cb), this);
+	}
 }
 
 FV_UnixSelectionHandles::~FV_UnixSelectionHandles()
 {
+	if(!m_text_handle) {
+		return;
+	}
 	g_object_unref (m_text_handle);
 }
 
 void FV_UnixSelectionHandles::hide()
 {
+	if(!m_text_handle) {
+		return;
+	}
 	_fv_text_handle_set_mode (m_text_handle, FV_TEXT_HANDLE_MODE_NONE);
 }
 
 void FV_UnixSelectionHandles::setCursorCoords(UT_sint32 x, UT_sint32 y, UT_uint32 height, bool visible)
 {
+	if(!m_text_handle) {
+		return;
+	}
+
 	GdkRectangle rect;
 
 	_fv_text_handle_set_mode(m_text_handle, FV_TEXT_HANDLE_MODE_CURSOR);
@@ -92,6 +110,10 @@
 void FV_UnixSelectionHandles::setSelectionCoords(UT_sint32 start_x, UT_sint32 start_y, UT_uint32 start_height, bool start_visible,
                                                  UT_sint32 end_x, UT_sint32 end_y, UT_uint32 end_height, bool end_visible)
 {
+	if(!m_text_handle) {
+		return;
+	}
+
 	GdkRectangle rect;
 
 	_fv_text_handle_set_mode(m_text_handle, FV_TEXT_HANDLE_MODE_SELECTION);

EOF

# Aplicamos parche 
patch -f -p0 < fix-segfault-on-save-pdf.patch || exit 1
fi


CPPFLAGS="-I$TMP/$PRGNAM-$VERSION" \
CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/usr \
  --sysconfdir=/etc \
  --localstatedir=/var \
  --mandir=/usr/man \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --docdir=/usr/doc/$PRGNAM-$VERSION \
  --disable-static \
  --enable-shared \
  --enable-clipart \
  --enable-templates \
  --enable-plugins \
  --build=$ARCH-slackware-linux

make -j$NUCLEOS || exit 1
make install DESTDIR=$PKG || exit 1
}

###################################
## BLOQUE PRINCIPAL DE EJECUCION ##
###################################
# Si se cierra el script inesperadamente, ejecutar la funcion de limpieza
trap f_exitmode SIGHUP SIGINT

#Inicializamos las variables globales
f_variables
#Comprobamos conexion a Internet
f_comprobarConexion
#Inicializamos las variables del script
F_variables
#Creamos directorio de trabajo
f_directorioTemporal
#Mostramos el mensaje de presentacion
f_presentacion
#Comprobamos updates del script
f_comprobarUpdates
#Asignamos o detectamos arquitectura
f_arquitectura
#Comprobamos version instalada del script
f_versionInstalada
#Si no existe el fichero se descargara
F_download
#Descomprimir fichero descargado y compilamos
F_compilar
#Hacemos strip sobre el paquete
f_strip
#Creamos xzm , instalamos y salimos
f_tareasFinales