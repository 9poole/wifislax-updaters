#!/bin/sh

# Script by www.seguridadwireless.net

SCRIPT_VERSION=20150802

############################################################
## Funciones comunes. Su nombre empieza por f_ ##
############################################################
f_variables(){
	. /opt/wifislax-updaters/Funciones/funciones_updater
}

############################################################
## Funciones propias del script. Su nombre empieza por F_ ##
############################################################
# Definicion de variables
F_variables() {
	PRGNAM=graphviz
	echo -ne "\033]2;${PRGNAM}_updater\007"
	WEB=http://graphviz.org/pub/graphviz/stable/SOURCES/
	VERSION=`curl -s $WEB | grep graphviz-[0-9] | tail -1 | cut -d- -f3 | cut -d t -f1 | sed "s/.$//g"`
	DOWNLOAD=${WEB}${PRGNAM}-${VERSION}.tar.gz
}

# Si el paquete no existe se descargara de internet
F_download(){
	if [ ! -f $PRGNAM-$VERSION.tar.gz ]; then
	echo 
	echo "$CYAN"Descargando sources de $PRGNAM-$VERSION"$CIERRE"
	sleep 1
	aria2c -x 3 $DOWNLOAD
	fi
}

# Descomprimimos el fichero descargado y compilamos
F_compilar(){
echo 
echo "$VERDE"Descomprimiendo ..."$CIERRE"
sleep 1
rm -rf $PRGNAM-$VERSION
tar xvf $PRGNAM-$VERSION.tar.gz
cd $PRGNAM-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
 -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

sed -i 's|/php/modules|/php/extensions|' configure

# Parcheamos
if [ $VERSION = 2.38.0 ]; then
echo 
echo "$VERDE""Version detectada 2.38.0 aplicando parche...""$CIERRE"
sleep 1
cat > graphviz.patch << "EOF"
diff -Naur graphviz-2.28.0.orig/tclpkg/gv/gv_php_init.c graphviz-2.28.0/tclpkg/gv/gv_php_init.c
--- graphviz-2.28.0.orig/tclpkg/gv/gv_php_init.c	2011-01-25 17:30:51.000000000 +0100
+++ graphviz-2.28.0/tclpkg/gv/gv_php_init.c	2012-05-30 04:10:40.657221055 +0200
@@ -19,11 +19,13 @@
 
 static size_t gv_string_writer (GVJ_t *job, const char *s, size_t len)
 {
+    TSRMLS_FETCH();
     return PHPWRITE(s, len);
 }
 
 static size_t gv_channel_writer (GVJ_t *job, const char *s, size_t len)
 {
+    TSRMLS_FETCH();
     return PHPWRITE(s, len);
 }
 

EOF

patch -p1 -i $TMP/$PRGNAM-$VERSION/graphviz.patch
fi

echo 
echo "$VERDE"Configurando ..."$CIERRE"
sleep 1

# Arreglo javac
if [ ! -f /usr/lib/java/bin/javac ]; then
ln -s /usr/lib/jvm/bin/javac /usr/lib/java/bin/javac
fi

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
LDFLAGS="-L/usr/lib${LIBDIRSUFFIX}" \
./configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --mandir=/usr/man \
  --disable-static \
  --enable-ocaml=no \
  --build=$ARCH-slackware-linux

echo 
echo "$VERDE"Compilando ..."$CIERRE"
sleep 1
  
make -j$NUCLEOS || exit 1
make install-strip DESTDIR=$PKG

# Config
mkdir -p $PKG/etc/php
echo "; Enable graphviz extension module
; extension=gv.so

; Graphviz' own documentation mentions a "gv.php" file that should
; be included. This file is however not necessary, it is just a
; wrapper class around functions that are already available after
; loading the extension, just leave out the "gv::" prefix.
; In case you still prefer to use the wrapper class you have to
; include it using its absolute path:
; <?php
; include ('/usr/lib@LIBDIRSUFFIX@/graphviz/php/gv.php');
; ?>" > $PKG/etc/php/graphviz.ini

echo '# Dummy content.' > $PKG/usr/lib${LIBDIRSUFFIX}/graphviz/config6

rm -rf $PKG/usr/share/$PRGNAM/doc
}

###################################
## BLOQUE PRINCIPAL DE EJECUCION ##
###################################
# Si se cierra el script inesperadamente, ejecutar la funcion de limpieza
trap f_exitmode SIGHUP SIGINT

#Inicializamos las variables globales
f_variables
#Comprobamos conexion a Internet
f_comprobarConexion
#Inicializamos las variables del script
F_variables
#Creamos directorio de trabajo
f_directorioTemporal
#Mostramos el mensaje de presentacion
f_presentacion
#Comprobamos updates del script
f_comprobarUpdates
#Asignamos o detectamos arquitectura
f_arquitectura
#Comprobamos version instalada del paquete
f_versionInstalada
#Si no existe el fichero se descargara
F_download
#Descomprimir fichero descargado y compilamos
F_compilar
#Hacemos strip sobre el paquete
f_strip
#Creamos xzm , instalamos y salimos
f_tareasFinales
