#!/bin/sh

# Script by www.seguridadwireless.net

SCRIPT_VERSION=20160219

############################################################
## Funciones comunes. Su nombre empieza por f_ ##
############################################################
f_variables(){
	. /opt/wifislax-updaters/Funciones/funciones_updater
}

############################################################
## Funciones propias del script. Su nombre empieza por F_ ##
############################################################
# Definicion de variables
F_variables() {
	PRGNAM=chromaprint
	echo -ne "\033]2;${PRGNAM}_updater\007"
	WEB=https://bitbucket.org/acoustid/chromaprint/downloads
	VERSION=1.3.1
	EXTENSION=tar.gz
	SOURCES=$PRGNAM-$VERSION.$EXTENSION
	DOWNLOAD=$WEB/$SOURCES
}

# Descomprimimos el fichero descargado y compilamos
F_compilar(){
echo 
echo "$VERDE"Configurando ..."$CIERRE"
sleep 1

# Check for ffmpeg: use it for calculations and build some tools
if pkg-config --exists libavcodec libavformat libavutil ; then
  avfft="ON" ; fftw3="OFF" ; examples="ON"
else
  avfft="OFF" ; fftw3="ON" ; examples="OFF"
fi

mkdir -p build
cd build
  cmake \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DLIB_SUFFIX=${LIBDIRSUFFIX} \
    -DWITH_AVFFT="$avfft" \
    -DWITH_FFTW3="$fftw3" \
    -DBUILD_EXAMPLES="$examples" \
    -DWITH_KISSFFT="OFF" \
    -DWITH_VDSP="OFF" \
    -DCMAKE_BUILD_TYPE=Release ..
    
echo 
echo "$VERDE"Compilando ..."$CIERRE"
sleep 1

  make || exit 1
  make install DESTDIR=$PKG || exit 1
cd ..
}

###################################
## BLOQUE PRINCIPAL DE EJECUCION ##
###################################
# Si se cierra el script inesperadamente, ejecutar la funcion de limpieza
trap f_exitmode SIGHUP SIGINT

#Inicializamos las variables globales
f_variables
#Comprobamos conexion a Internet
f_comprobarConexion
#Inicializamos las variables del script
F_variables
#Creamos directorio de trabajo
f_directorioTemporal
#Mostramos el mensaje de presentacion
f_presentacion
#Comprobamos updates del script
f_comprobarUpdates
#Asignamos o detectamos arquitectura
f_arquitectura
#Comprobamos version instalada del paquete
f_versionInstalada
#Si no existe el fichero se descargara
f_download
#Preparamos entorno
f_preparar
#Descomprimir fichero descargado y compilamos
F_compilar
#Hacemos strip sobre el paquete
f_strip
#Creamos xzm , instalamos y salimos
f_tareasFinales