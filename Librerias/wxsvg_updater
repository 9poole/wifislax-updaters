#!/bin/sh

# Script by www.seguridadwireless.net

SCRIPT_VERSION=20160218

############################################################
## Funciones comunes. Su nombre empieza por f_ ##
############################################################
f_variables(){
	. /opt/wifislax-updaters/Funciones/funciones_updater
}

############################################################
## Funciones propias del script. Su nombre empieza por F_ ##
############################################################
# Definicion de variables
F_variables() {
	WEB=https://sourceforge.net/projects/wxsvg/files/wxsvg/
	VERSION=`curl -s $WEB | grep /latest | cut -d '/' -f 8 | cut -d ":" -f 1 | cut -d '-' -f 2 | cut -d "t" -f-1`
	PRGNAM=wxsvg
	echo -ne "\033]2;${PRGNAM}_updater\007"
	EXTENSION=tar.bz2
	SOURCES=$PRGNAM-$VERSION.$EXTENSION
	DOWNLOAD=$WEB/$VERSION/$SOURCES
}

# Comprobar dependencias
F_dependencias(){
DEPENDENCIAS="wxPython ffmpeg"
f_dependencias
}

# Descomprimimos el fichero descargado y compilamos
F_compilar(){
if [ $VERSION = "1.5.5" ]; then
FFMPEGSERIES=$(ffmpeg -version|grep version|head -1|cut -d ' ' -f3|cut -d. -f1)
if [ $FFMPEGSERIES = "3" ]; then
cat > ffmpeg3.patch << "EOF"
--- wxsvg-1.5.5.orig/src/mediadec_ffmpeg.cpp
+++ wxsvg-1.5.5/src/mediadec_ffmpeg.cpp
@@ -263,7 +263,7 @@ wxImage wxFfmpegMediaDecoder::GetNextFra
 			avcodec_decode_video2(m_codecCtx, m_frame, &frameFinished, &packet);
 			if (frameFinished) {
 				SwsContext* imgConvertCtx = sws_getContext(m_codecCtx->width, m_codecCtx->height, m_codecCtx->pix_fmt,
-						m_width, m_height, PIX_FMT_RGB24, SWS_BICUBIC, NULL, NULL, NULL);
+						m_width, m_height, AV_PIX_FMT_RGB24, SWS_BICUBIC, NULL, NULL, NULL);
 				if (imgConvertCtx == NULL) {
 					av_free_packet(&packet);
 					return wxImage();
 
EOF
# Aplicamos parche
patch -Np1 < ffmpeg3.patch || exit 1
fi
fi
echo ""
echo "$VERDE"Configurando ..."$CIERRE"
sleep 1

sh autogen.sh || true

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/usr \
  --with-wx-config=/usr/bin/wx-config \
  --build=$ARCH-slackware-linux
  
echo ""
echo "$VERDE"Compilando ..."$CIERRE"
sleep 1
make  || exit 1
make install DESTDIR=$PKG
}

###################################
## BLOQUE PRINCIPAL DE EJECUCION ##
###################################
# Si se cierra el script inesperadamente, ejecutar la funcion de limpieza
trap f_exitmode SIGHUP SIGINT

#Inicializamos las variables globales
f_variables
#Comprobamos conexion a Internet
f_comprobarConexion
#Inicializamos las variables del script
F_variables
#Creamos directorio de trabajo
f_directorioTemporal
#Mostramos el mensaje de presentacion
f_presentacion
#Comprobamos updates del script
f_comprobarUpdates
#Asignamos o detectamos arquitectura
f_arquitectura
#Comprobamos version instalada del script
f_versionInstalada
# Comprobar dependencias
F_dependencias
#Si no existe el fichero se descargara
f_download
#Preparamos entorno
f_preparar
#Descomprimir fichero descargado y compilamos
F_compilar
#Hacemos strip sobre el paquete
f_strip
#Creamos xzm , instalamos y salimos
f_tareasFinales