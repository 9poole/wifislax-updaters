#!/bin/sh

# Script by www.seguridadwireless.net

SCRIPT_VERSION=20151005
CATEGORIA="Editores de audio"

############################################################
## Funciones comunes. Su nombre empieza por f_ ##
############################################################
f_variables(){
	. /opt/wifislax-updaters/Funciones/funciones_updater
}

############################################################
## Funciones propias del script. Su nombre empieza por F_ ##
############################################################
# Definicion de variables
F_variables() {
	PRGNAM=ardour
	SRCNAM=Ardour
	echo -ne "\033]2;${PRGNAM}_updater\007"
	WEB=http://www.liwjatan.at/files/src/ardour/
	VERSION=`curl -s $WEB | grep .tar.bz2 | head -1 | cut -d- -f3 | cut -d t -f1 | sed "s/.$//g"`
	RAMA=`echo $VERSION | cut -d . -f1`
	EXTENSION=tar.bz2
	SOURCES=${SRCNAM}-${VERSION}.$EXTENSION
	DOWNLOAD=${WEB}$SOURCES
}

# Comprobar dependencias
F_dependencias(){
#1
	if [ -f /usr/bin/dot ] ;then
		GRAPHVIZ_EXIST=`echo "$VERDE"Instalada"$CIERRE"`
		GRAPHVIZ_EXIST2=SI
	else
		GRAPHVIZ_EXIST=`echo "$ROJO"No Instalada"$CIERRE"`
		GRAPHVIZ_EXIST2=NO
	fi
	
	echo "$ROSA"Comprobando dependencias ..."$CIERRE"
	echo
	sleep 3
	echo "$CYAN"Dependencias de este paquete:""
	echo ""
	echo "$AMARILLO"graphviz"$CIERRE: $GRAPHVIZ_EXIST"
	
	if [ $GRAPHVIZ_EXIST2 = NO ]; then
		echo "$AMARILLO"
		echo "Resolviendo dependencia graphviz ..."
		sleep 3
		if [ ! -f /opt/wifislax-updaters/Librerias/graphviz_updater ]; then
			echo $ROJO
			echo "No tienes el updater graphviz..."
			sleep 1
			echo "No se puede continuar..."
			sleep 1
			echo "El script se cierra aqui."
			sleep 1
			echo $CIERRE
			exit 0
		fi
		cd /opt/wifislax-updaters/Librerias/
		statusfile=$(mktemp)
		xterm -e sh -c '/opt/wifislax-updaters/Librerias/graphviz_updater; echo $? > '$statusfile 
		status=$(cat $statusfile)
		rm $statusfile
		if [ -z $status ] || [ $status != "0" ]; then
		  echo "$ROJO"ERROR. No se ha podido crear el paquete"$CIERRE"
		  if [ -z $status ]; then
		    exit 1
		  else
		    exit $status
		  fi
		fi
		
		cd $TMP
	fi

	# Verificamos que salio bien graphviz_updater
	if [ ! -f /usr/bin/dot ] ;then
		echo $ROJO
		echo "Algo salio mal al instalar graphviz..."
		sleep 1
		echo "No se puede continuar..."
		sleep 1
		echo "El script se cierra aqui."
		sleep 1
		echo $CIERRE
		exit 0
	fi

#2
	if [ -f /usr/lib/pkgconfig/lrdf.pc ];then
		LIBLRDF_EXIST=`echo "$VERDE"Instalada"$CIERRE"`
		LIBLRDF_EXIST2=SI
	else
		LIBLRDF_EXIST=`echo "$ROJO"No Instalada"$CIERRE"`
		LIBLRDF_EXIST2=NO
	fi
	
	echo "$AMARILLO"liblrdf"$CIERRE: $LIBLRDF_EXIST"
	if [ $LIBLRDF_EXIST2 = NO ]; then
		echo "$AMARILLO"
		echo "Resolviendo dependencia liblrdf ..."
		sleep 3
		if [ ! -f /opt/wifislax-updaters/Librerias/liblrdf_updater ]; then
			echo $ROJO
			echo "No tienes el updater liblrdf..."
			sleep 1
			echo "No se puede continuar..."
			sleep 1
			echo "El script se cierra aqui."
			sleep 1
			echo $CIERRE
			exit 0
		fi
		cd /opt/wifislax-updaters/Librerias/
		statusfile=$(mktemp)
		xterm -e sh -c '/opt/wifislax-updaters/Librerias/liblrdf_updater; echo $? > '$statusfile 
		status=$(cat $statusfile)
		rm $statusfile
		if [ -z $status ] || [ $status != "0" ]; then
		  echo "$ROJO"ERROR. No se ha podido crear el paquete"$CIERRE"
		  if [ -z $status ]; then
		    exit 1
		  else
		    exit $status
		  fi
		fi
		
		cd $TMP
	fi

	# Verificamos que salio bien liblrdf_updater
	if [ ! -f /usr/lib/pkgconfig/lrdf.pc ];then
		echo $ROJO
		echo "Algo salio mal al instalar liblrdf..."
		sleep 1
		echo "No se puede continuar..."
		sleep 1
		echo "El script se cierra aqui."
		sleep 1
		echo $CIERRE
		exit 0
	fi

#3
	if [ -f /usr/bin/aubiocut ];then
		AUBIO_EXIST=`echo "$VERDE"Instalada"$CIERRE"`
		AUBIO_EXIST2=SI
	else
		AUBIO_EXIST=`echo "$ROJO"No Instalada"$CIERRE"`
		AUBIO_EXIST2=NO
	fi
	
	echo "$AMARILLO"aubio"$CIERRE: $AUBIO_EXIST"
	if [ $AUBIO_EXIST2 = NO ]; then
		echo "$AMARILLO"
		echo "Resolviendo dependencia aubio ..."
		sleep 3
		if [ ! -f /opt/wifislax-updaters/Librerias/aubio_updater ]; then
			echo $ROJO
			echo "No tienes el updater aubio..."
			sleep 1
			echo "No se puede continuar..."
			sleep 1
			echo "El script se cierra aqui."
			sleep 1
			echo $CIERRE
			exit 0
		fi
		cd /opt/wifislax-updaters/Librerias/
		statusfile=$(mktemp)
		xterm -e sh -c '/opt/wifislax-updaters/Librerias/aubio_updater; echo $? > '$statusfile 
		status=$(cat $statusfile)
		rm $statusfile
		if [ -z $status ] || [ $status != "0" ]; then
		  echo "$ROJO"ERROR. No se ha podido crear el paquete"$CIERRE"
		  if [ -z $status ]; then
		    exit 1
		  else
		    exit $status
		  fi
		fi
		
		cd $TMP
	fi

	# Verificamos que salio bien aubio_updater
	if [ ! -f /usr/bin/aubiocut ];then
		echo $ROJO
		echo "Algo salio mal al instalar aubio..."
		sleep 1
		echo "No se puede continuar..."
		sleep 1
		echo "El script se cierra aqui."
		sleep 1
		echo $CIERRE
		exit 0
	fi
}

# Descomprimimos el fichero descargado y compilamos
F_compilar(){
  python waf configure --prefix=/usr \
                        --configdir=/etc \
                        --with-backends="jack,alsa" \
                        --libjack=weak \
                        --optimize \
                        --docs

  python waf build $MAKEFLAGS
  
  python2 waf install --destdir=$PKG
  
# Entrada a menu
mkdir -p $PKG/usr/share/applications
echo "[Desktop Entry]
Name=Ardour $RAMA
Comment=Multitrack hard disk recorder
Exec=ardour$RAMA
Icon=/usr/share/ardour$RAMA/icons/ardour_icon_256px.png
Terminal=false
Type=Application
X-MultipleArgs=false
Categories=Audio;AudioVideoEditing;AudioVideo;Video;" > $PKG/usr/share/applications/$PRGNAM.desktop
}

###################################
## BLOQUE PRINCIPAL DE EJECUCION ##
###################################
# Si se cierra el script inesperadamente, ejecutar la funcion de limpieza
trap f_exitmode SIGHUP SIGINT

#Inicializamos las variables globales
f_variables
#Comprobamos conexion a Internet
f_comprobarConexion
#Inicializamos las variables del script
F_variables
#Creamos directorio de trabajo
f_directorioTemporal
#Mostramos el mensaje de presentacion
f_presentacion
#Comprobamos updates del script
f_comprobarUpdates
#Compronar dependencias
F_dependencias
#Asignamos o detectamos arquitectura
f_arquitectura
#Comprobamos version instalada del paquete
f_versionInstalada
#Si no existe el fichero se descargara
f_download
#Preparamos entorno
f_compilar
#Descomprimir fichero descargado y compilamos
F_compilar
#Hacemos strip sobre el paquete
f_strip
#Creamos xzm , instalamos y salimos
f_tareasFinales
