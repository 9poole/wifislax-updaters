#!/bin/sh

# Script by www.seguridadwireless.net

SCRIPT_VERSION=20160403

############################################################
## Funciones comunes. Su nombre empieza por f_ ##
############################################################
f_variables(){
	. /opt/wifislax-updaters/Funciones/funciones_updater
}

############################################################
## Funciones propias del script. Su nombre empieza por F_ ##
############################################################
# Definicion de variables
F_variables() {
	PRGNAM=dssi
	echo -ne "\033]2;${PRGNAM}_updater\007"
	WEB=http://downloads.sourceforge.net/$PRGNAM
	VERSION=1.1.1
	EXTENSION=tar.gz
	SOURCES=$PRGNAM-$VERSION.$EXTENSION
	DOWNLOAD=$WEB/$SOURCES
}

# Comprobar dependencias
F_dependencias(){
DEPENDENCIAS="jack-audio-connection-kit ladspa_sdk liblo"
f_dependencias
}

# Descomprimimos el fichero descargado y compilamos
F_compilar(){
echo 
echo "$VERDE"Configurando ..."$CIERRE"
sleep 1

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --sysconfdir=/etc \
  --localstatedir=/var \
  --mandir=/usr/man \
  --docdir=/usr/doc/$PRGNAM-$VERSION \
  --build=$ARCH-slackware-linux

echo 
echo "$VERDE"Compilando ..."$CIERRE"
sleep 1

make || exit 1
make install DESTDIR=$PKG || exit 1

mkdir -p $PKG/etc/profile.d/
cat << EOF > $PKG/etc/profile.d/dssi.csh
#!/bin/csh
setenv DSSI_PATH /usr/lib${LIBDIRSUFFIX}/dssi
EOF
cat << EOF > $PKG/etc/profile.d/dssi.sh
#!/bin/sh
export DSSI_PATH=/usr/lib${LIBDIRSUFFIX}/dssi
EOF
chmod 0755 $PKG/etc/profile.d/*
}

###################################
## BLOQUE PRINCIPAL DE EJECUCION ##
###################################
# Si se cierra el script inesperadamente, ejecutar la funcion de limpieza
trap f_exitmode SIGHUP SIGINT

#Inicializamos las variables globales
f_variables
#Asignamos o detectamos arquitectura
f_arquitectura
#Comprobamos conexion a Internet
f_comprobarConexion
#Inicializamos las variables del script
F_variables
#Creamos directorio de trabajo
f_directorioTemporal
#Mostramos el mensaje de presentacion
f_presentacion
#Comprobamos updates del script
f_comprobarUpdates
#Comprobamos version instalada del paquete
f_versionInstalada
#Compronar dependencias
F_dependencias
#Si no existe el fichero se descargara
f_download
#Preparamos entorno
f_preparar
#Descomprimir fichero descargado y compilamos
F_compilar
#Hacemos strip sobre el paquete
f_strip
#Creamos xzm , instalamos y salimos
f_tareasFinales