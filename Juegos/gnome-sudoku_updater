#!/bin/sh

# Script by www.seguridadwireless.net

SCRIPT_VERSION=20150829

############################################################
## Funciones comunes. Su nombre empieza por f_ ##
############################################################
f_variables(){
	. /opt/wifislax-updaters/Funciones/funciones_updater
}

############################################################
## Funciones propias del script. Su nombre empieza por F_ ##
############################################################
# Definicion de variables
F_variables() {
	PRGNAM=gnome-sudoku
	echo -ne "\033]2;${PRGNAM}_updater\007"
	WEB=http://ftp.gnome.org/pub/gnome/sources/$PRGNAM/
	#RAMA=`curl -s $WEB | grep [0-9]/| tail -1 | cut -d '>' -f3 | cut -d / -f-1`
	RAMA=3.14
	VERSION=`curl -s ${WEB}${RAMA}/ | grep .xz | tail -1 | cut -d- -f3 | cut -d t -f-1 | sed "s/.$//g"`
	DOWNLOAD=http://ftp.gnome.org/pub/gnome/sources/$PRGNAM/$RAMA/$PRGNAM-$VERSION.tar.xz
}

F_dependencias(){
	if [ -f /usr/lib/pkgconfig/gee-0.8.pc ]; then
		LIBGEE_EXIST=`echo "$VERDE"Instalada"$CIERRE"`
		LIBGEE_EXIST2=SI
	else
		LIBGEE_EXIST=`echo "$ROJO"No Instalada"$CIERRE"`
		LIBGEE_EXIST2=NO
	fi
	
	if [ -f /usr/bin/qqwing ]; then
		QQWING_EXIST=`echo "$VERDE"Instalada"$CIERRE"`
		QQWING_EXIST2=SI
	else
		QQWING_EXIST=`echo "$ROJO"No Instalada"$CIERRE"`
		QQWING_EXIST2=NO
	fi

	echo "$ROSA"Comprobando dependencias ..."$CIERRE"
	echo
	sleep 3
	echo "$CYAN"Dependencias de este paquete:""
	echo ""
	echo "$AMARILLO"libgee"$CIERRE: $LIBGEE_EXIST"
	
	if [ $LIBGEE_EXIST2 = NO ]; then
		echo "$AMARILLO"
		echo "Resolviendo dependencia libgee ..."
		sleep 3
		if [ ! -f /opt/wifislax-updaters/Librerias/libgee_updater ]; then
			echo $ROJO
			echo "No tienes el updater libgee..."
			sleep 1
			echo "No se puede continuar..."
			sleep 1
			echo "El script se cierra aqui."
			sleep 1
			echo $CIERRE
			exit 0
		fi
		cd /opt/wifislax-updaters/Librerias/
		statusfile=$(mktemp)
		xterm -e sh -c '/opt/wifislax-updaters/Librerias/libgee_updater; echo $? > '$statusfile 
		status=$(cat $statusfile)
		rm $statusfile
		if [ -z $status ] || [ $status != "0" ]; then
		  echo "$ROJO"ERROR. No se ha podido crear el paquete"$CIERRE"
		  if [ -z $status ]; then
		    exit 1
		  else
		    exit $status
		  fi
		fi
		
		cd $TMP
	fi

	# Verificamos que salio bien libgee_updater
	if [ ! -f /usr/lib/pkgconfig/gee-0.8.pc ]; then
		echo $ROJO
		echo "Algo salio mal al instalar libgee..."
		sleep 1
		echo "No se puede continuar..."
		sleep 1
		echo "El script se cierra aqui."
		sleep 1
		echo $CIERRE
		exit 0
	fi 

	echo "$AMARILLO"qqwing"$CIERRE: $QQWING_EXIST"
	if [ $QQWING_EXIST2 = NO ]; then
		echo "$AMARILLO"
		echo "Resolviendo dependencia qqwing ..."
		sleep 3
		if [ ! -f /opt/wifislax-updaters/Librerias/qqwing_updater ]; then
			echo $ROJO
			echo "No tienes el updater qqwing..."
			sleep 1
			echo "No se puede continuar..."
			sleep 1
			echo "El script se cierra aqui."
			sleep 1
			echo $CIERRE
			exit 0
		fi
		cd /opt/wifislax-updaters/Librerias/
		statusfile=$(mktemp)
		xterm -e sh -c '/opt/wifislax-updaters/Librerias/qqwing_updater; echo $? > '$statusfile 
		status=$(cat $statusfile)
		rm $statusfile
		if [ -z $status ] || [ $status != "0" ]; then
		  echo "$ROJO"ERROR. No se ha podido crear el paquete"$CIERRE"
		  if [ -z $status ]; then
		    exit 1
		  else
		    exit $status
		  fi
		fi
		
		cd $TMP
	fi

	# Verificamos que salio bien qqwing_updater
	if [ ! -f /usr/bin/qqwing ]; then
		echo $ROJO
		echo "Algo salio mal al instalar qqwing..."
		sleep 1
		echo "No se puede continuar..."
		sleep 1
		echo "El script se cierra aqui."
		sleep 1
		echo $CIERRE
		exit 0
	fi 


	# Si todo salio bien
	echo ""
	echo "$VERDE"Bien ..podemos continuar"$CIERRE"
	echo ""
	sleep 3
}

# Si el paquete no existe se descargara de internet
F_download(){
	if [ ! -f $PRGNAM-$VERSION.tar.xz ]; then
	echo 
	echo "$CYAN"Descargando sources de $PRGNAM-$VERSION"$CIERRE"
	sleep 1
	aria2c -x 3 $DOWNLOAD
	fi
}

# Descomprimimos el fichero descargado y compilamos
F_compilar(){
echo 
echo "$VERDE"Descomprimiendo ..."$CIERRE"
sleep 1
tar xvf $PRGNAM-$VERSION.tar.xz
cd $PRGNAM-$VERSION
chown -R root:root .
find -L . \
  \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 -o -perm 511 \) \
  -exec chmod 755 {} \; -o \
  \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
  -exec chmod 644 {} \;

echo 
echo "$VERDE"Configurando ..."$CIERRE"
sleep 1

	CFLAGS="$SLKCFLAGS" \
	CXXFLAGS="$SLKCFLAGS" \
	./configure \
	--prefix=/usr  \
	--sysconfdir=/etc  \
	--localstatedir=/var \
	--disable-static  \
	--disable-schemas-compile
  
echo 
echo "$VERDE"Compilando ..."$CIERRE"
sleep 1
  
make -j$NUCLEOS || exit 1
make install DESTDIR=$PKG
}

###################################
## BLOQUE PRINCIPAL DE EJECUCION ##
###################################
# Si se cierra el script inesperadamente, ejecutar la funcion de limpieza
trap f_exitmode SIGHUP SIGINT

#Inicializamos las variables globales
f_variables
#Comprobamos conexion a Internet
f_comprobarConexion
#Inicializamos las variables del script
F_variables
#Creamos directorio de trabajo
f_directorioTemporal
#Mostramos el mensaje de presentacion
f_presentacion
#Comprobamos updates del script
f_comprobarUpdates
# Comprobar dependencias
F_dependencias
#Asignamos o detectamos arquitectura
f_arquitectura
#Comprobamos version instalada del paquete
f_versionInstalada
#Si no existe el fichero se descargara
F_download
#Descomprimir fichero descargado y compilamos
F_compilar
#Hacemos strip sobre el paquete
f_strip
#Creamos xzm , instalamos y salimos
f_tareasFinales
