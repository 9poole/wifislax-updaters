#!/bin/sh

# Script by www.seguridadwireless.net

SCRIPT_VERSION=20150906

# Colores
CIERRE=${CIERRE:-"[0m"}
ROJO=${ROJO:-"[1;31m"}
VERDE=${VERDE:-"[1;32m"}
CYAN=${CYAN:-"[1;36m"}
AMARILLO=${AMARILLO:-"[1;33m"}
BLANCO=${BLANCO:-"[1;37m"}
ROSA=${ROSA:-"[1;35m"}

# Variables globales
FILE=amd-catalyst-14-9-linux-x86-x86-64.zip
DESCARGA=http://www2.ati.com/drivers/linux/$FILE
MODULO=015
PRGNAM=Driver_ATI
echo -ne "\033]2;${PRGNAM}_updater\007"
VERSION=14.9
BUILD=${BUILD:-1}
TAG=${TAG:-sw}


CWD=$(pwd)
TMP=${TMP:-/tmp/build/$PRGNAM}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

# Si se cierra el script inesperadamente, ejecutar la funcion
trap exitmode SIGHUP SIGINT

# Funcion que limpia
function exitmode {
rm -Rf $TMP &>/dev/null
exit 1
}

# Presentacion
clear
echo ""
echo "$BLANCO                *****************************$CIERRE"
echo "$VERDE                    Instalador/Actualizador   $CIERRE"
echo "$VERDE                       para el programa       $CIERRE"
echo "$CYAN                          $PRGNAM              $CIERRE"
echo "$VERDE                                              $CIERRE"
echo "$VERDE                  www.seguridadwireless.net   $CIERRE"
echo "$BLANCO                *****************************$CIERRE"
echo ""
sleep 3

# Comprobar conexion by geminis_demon
echo "$ROSA"Comprobando si hay acceso a internet"$CIERRE."
if [ "$(ping google.com -c1 2>/dev/null)" ]; then 
	echo "$VERDE"Tengo internet"$CIERRE ... $BLANCO"la tarea continuara."$CIERRE"
	echo ""
else 
	echo "$ROJO"No tengo internet"$CIERRE ... $BLANCO"el script se cerrara."$CIERRE"
	echo ""
	sleep 3
	exit 0
fi

# Comprobar updates para el script
SERVIDOR_WEB="http://www.downloadwireless.net/wifislax-updaters"
DIRECTORIO=$(pwd)
SERVIDOR_VERSION=$(timeout -s SIGTERM 10 curl -s $SERVIDOR_WEB/${DIRECTORIO##*/}/${PRGNAM}_updater | grep "SCRIPT_VERSION=" | head -1 |cut -d "=" -f2)


echo ${CYAN}Version Script$CIERRE: $ROJO${SCRIPT_VERSION:6}$BLANCO/$AMARILLO${SCRIPT_VERSION:4:2}$BLANCO/$ROJO${SCRIPT_VERSION:0:4}$CIERRE

if [ "$(ping downloadwireless.net -c1 2>/dev/null)" ]; then
if [[ $SCRIPT_VERSION -lt $SERVIDOR_VERSION ]]; then
echo
echo "$ROSA"Comprobando si hay actualizaciones para el script..."$CIERRE."
echo ${ROJO}NUEVA VERSION$CIERRE
echo 
echo ${ROSA}Version Server$CIERRE: $ROJO${SERVIDOR_VERSION:6}$BLANCO/$AMARILLO${SERVIDOR_VERSION:4:2}$BLANCO/$ROJO${SERVIDOR_VERSION:0:4}$CIERRE
echo
echo ${CYAN}Actualizando ${PRGNAM}_updater
curl -s $SERVIDOR_WEB/${DIRECTORIO##*/}/${PRGNAM}_updater -o $DIRECTORIO/${PRGNAM}_updater
echo ${ROJO}LISTO$CIERRE
sleep 3
$0
exit
fi
fi

# Definimos arquitectura del sitema
if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) export ARCH=i486 ;;
    arm*) export ARCH=arm ;;
       *) export ARCH=$( uname -m ) ;;
  esac
fi

# Si existe algun xzm de una prueba anterior se fulminara
FULMINAR1=$HOME/Desktop/$MODULO-$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.xzm
FULMINAR2=$HOME/Desktop/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.xzm
if [ -f $FULMINAR1 ]; then
rm -rf $FULMINAR1 &>/dev/null
fi
if [ -f $FULMINAR2 ]; then
rm -rf $FULMINAR2 &>/dev/null
fi

set -eu

# Detectando version instalada en el sistema
if [ -f /var/log/packages/$PRGNAM-[0-9]* ]; then
INSTALADA=$(grep -r -i "package name" /var/log/packages/$PRGNAM-[0-9]* | awk '{print $3}' | sed "s/$PRGNAM//g" | cut -d- -f2)
echo ""
echo ""$AMARILLO"Su version actual es..."$CYAN"$PRGNAM-$INSTALADA"$CIERRE""
sleep 3
echo ""
echo "__________________________________________"
echo ""
echo ""$AMARILLO"La version mas actual es..."$CYAN"$PRGNAM-$VERSION"$CIERRE""
echo ""
echo ""$BLANCO"Pulsa $ROJO"ENTER" $BLANCO"si deseas actualizarla""
read junk
echo ""
fi

# Si el sistema tiene una version anterior se eliminara
if [ -f /var/log/packages/$PRGNAM-[0-9]* ]; then
echo ""
echo "$ROJO"Se detecto una version antigua en el sistema... limpiando."$CIERRE"
sleep 3
slapt-get --upgrade &>/dev/null
removepkg mesa
slapt-get --install mesa
removepkg /var/log/packages/$PRGNAM-[0-9]*
fi

# Creamos directorio temporal de trabajo
rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP

# Si el paquete no existe se descargara de internet
if [ -f $FILE ]; then
rm -rf $FILE
echo ""
echo "$CYAN"Descargando sources de $PRGNAM-$VERSION"$CIERRE"
sleep 3
aria2c -x 3 --referer=http://support.amd.com $DESCARGA
else
echo ""
echo "$CYAN"Descargando sources de $PRGNAM-$VERSION"$CIERRE"
sleep 3
aria2c -x 3 --referer=http://support.amd.com $DESCARGA
fi

# Descomprimimos el fichero descargado
echo ""
echo "$VERDE"Descomprimiendo ..."$CIERRE"
sleep 3
rm -rf $PRGNAM-$VERSION
unzip $FILE -d $TMP &>/dev/null
rm -rf $FILE
cd $TMP/fglrx-*
rm -rf $TMP/fglrx-*/{doc,check.sh}
echo ""
echo "$VERDE"Creando paquete .tgz ..."$CIERRE"
echo ""
sleep 3
$TMP/fglrx-*/*.run --buildpkg
echo ""
echo "$VERDE"Extrayendo ficheros del archivo .run ..."$CIERRE"
echo ""
sleep 3
rm -rf $TMP/fglrx-*/fglrx-install.*
$TMP/fglrx-*/*.run --extract
rm -rf $TMP/fglrx-*/*.run
cp -rf $TMP/fglrx-*/fglrx-install*/common/lib $PKG/
cp -rf $TMP/fglrx-*/fglrx-install*/arch/x86/lib/modules/fglrx/build_mod/libfglrx_ip.a $PKG/lib/modules/fglrx/build_mod/libfglrx_ip.a
mv ./*.tgz $PKG
echo "$VERDE"Convirtiendo tgz a xzm ..."$CIERRE"
echo ""
sleep 3
txz2xzm $PKG/*.tgz $PKG/$PRGNAM.xzm
rm -rf $PKG/*.tgz
echo "$VERDE"Extrayendo xzm para realizar modificaciones..."$CIERRE"
echo ""
sleep 3
xzm2dir $PKG/$PRGNAM.xzm $PKG
rm -rf $PKG/var
rm -rf $PKG/$PRGNAM.xzm
rm -rf $PKG/lib/modules/*-wifislax
rm -rf $PKG/usr/lib/libGL.s*
cp -rf $PKG/usr/lib/fglrx/fglrx-libGL.so.1.2 $PKG/usr/lib/libGL.so.1.2.0
rm -rf $PKG/usr/src
rm -rf $PKG/usr/share/ati/ATI_SlackBuild
rm -rf $PKG/usr/share/applications/*.desktop

echo "[Desktop Entry]
Encoding=UTF-8
Type=Application
Exec=amdcccle
Categories=Settings;
Icon=ccc_large

Name=AMD Catalyst Control Center (Administrative)
Name[es]=AMD Catalyst Control Center (Administrativo)" > $PKG/usr/share/applications/amdccclesu.desktop

# Creamos ficheros necesarios de configuracion
mkdir -p $PKG/etc/modprobe.d
cat > $PKG/etc/modprobe.d/blacklist-fglrx.conf << "EOF"
blacklist radeon
EOF

# Este fichero es muy importante , se encarga de poner la aceleracion grafica
# A disposicion de aplicaciones que puedan usarla.
mkdir -p $PKG/etc/OpenCL/vendors
cat > $PKG/etc/OpenCL/vendors/amdocl32.icd << "EOF"
libamdocl32.so
EOF

# Creamos xzm , instalamos y salimos
echo ""
echo "$VERDE"Instalando y creando modulo xzm ..."$CIERRE"
sleep 3
cd $PKG
cleandir $PKG
dir2xzm $PKG $HOME/Desktop/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.xzm
WIFISLAX=`cat /etc/wifislax-version | sed "s/ /_/g"`
mv -f $HOME/Desktop/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.xzm $HOME/Desktop/$MODULO-$PRGNAM-${VERSION}_${WIFISLAX}-$ARCH-$BUILD$TAG.xzm
rm -Rf $TMP &>/dev/null
clear
echo ""
echo ""$VERDE"Creado modulo del paquete "$AMARILLO"$PRGNAM-$VERSION"$CIERRE""
echo ""
echo "$VERDE"Las tareas han finalizado"$CIERRE"
sleep 3
echo ""
sleep 3
if [ -d /mnt/live/memory ]; then
echo "$VERDE"Se ha detectado modo live , el driver no se autoinstalara ..."$CIERRE"
echo "$VERDE"Copiatelo en la carpeta modules respetando el nombre del fichero."$CIERRE"
echo ""
echo "$VERDE"Bye Bye"$CIERRE"
exit 0
else
echo "$VERDE"Se ha detectado modo instalado a disco duro ..."$CIERRE"
echo "$VERDE"El driver se autoinstalara y reiniciara el equipo."$CIERRE"
echo ""
echo "$AMARILLO"Presione "$ROJO"ENTER"$AMARILLO" para proceder"$CIERRE"
echo ""
echo "$CYAN"Si no quieres instalarlo ,simplemente cierra esta ventana."$CIERRE"
echo ""
read junk
echo "$VERDE"Bye Bye"$CIERRE"
xzm2dir $MODULO-$PRGNAM-${VERSION}_${WIFISLAX}-$ARCH-$BUILD$TAG.xzm / &>/dev/null
reboot &>/dev/null
fi
exit 0