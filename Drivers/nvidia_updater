#!/bin/sh

# Script by www.seguridadwireless.net

SCRIPT_VERSION=20151031

############################################################
## Funciones comunes. Su nombre empieza por f_ ##
############################################################
f_variables(){
	. /opt/wifislax-updaters/Funciones/funciones_updater
}

############################################################
## Funciones propias del script. Su nombre empieza por F_ ##
############################################################
# Definicion de variables
F_variables() {
	PRGNAM=nvidia
	echo -ne "\033]2;${PRGNAM}_updater\007"
	WEB=http://www.nvidia.com/object/unix.html
	VERSION=`echo $(curl -s $WEB|grep Short|head -n1|cut -d ">" -f2|cut -d "<" -f1)`
	EXTENSION=run
	SOURCES=$PRGNAM-$VERSION.$EXTENSION
	D1=http://es.download.nvidia.com/XFree86/Linux-x86/$VERSION/NVIDIA-Linux-x86-$VERSION.run
	D2=http://download.nvidia.com/XFree86/nvidia-installer/nvidia-installer-$VERSION.tar.bz2
	D3=http://download.nvidia.com/XFree86/nvidia-modprobe/nvidia-modprobe-$VERSION.tar.bz2
	D4=http://download.nvidia.com/XFree86/nvidia-persistenced/nvidia-persistenced-$VERSION.tar.bz2
	D5=http://download.nvidia.com/XFree86/nvidia-settings/nvidia-settings-$VERSION.tar.bz2
	D6=http://download.nvidia.com/XFree86/nvidia-xconfig/nvidia-xconfig-$VERSION.tar.bz2
	D7=http://slackbuilds.org/slackbuilds/14.1/system/nvidia-driver.tar.gz
	D8=http://slackbuilds.org/slackbuilds/14.1/system/nvidia-kernel.tar.gz
}

##### Funcion para descargar todo #####
F_download(){
  aria2c -x8 -Z $D1 $D2 $D3 $D4 $D5 $D6 $D7 $D8
  sleep 1
}
F_compilar(){
  # Descomprimimos los scripts para compilar kernel y driver
  tar xvf nvidia-kernel.tar.gz
  tar xvf nvidia-driver.tar.gz
  # Comprobamos la versiÃ³n de slackbuild para posteriormente usarlo para parchear el script
  SLACKVERSION=$(head -n2 nvidia-driver/nvidia-driver.info | tail -1 | cut -d '"' -f2)
  # Damos permisos a los scripts 
  chmod +x nvidia-kernel/nvidia-kernel.SlackBuild
  chmod +x nvidia-driver/nvidia-driver.SlackBuild
  # Parcheamos lo necesario para que funcione todo
  sed -i "s/$SLACKVERSION/$VERSION/g" nvidia-kernel/nvidia-kernel.SlackBuild
  sed -i "s/$SLACKVERSION/$VERSION/g" nvidia-driver/nvidia-driver.SlackBuild
  sed -i 's/libEGL.so.$VERSION/libEGL.so.1/g' nvidia-driver/nvidia-driver.SlackBuild
  mkdir -p package-nvidia/usr/share/nvidia
  sed -i '79acp -Rf ./kernel /tmp/build/nvidia/package-nvidia/usr/share/nvidia' nvidia-kernel/nvidia-kernel.SlackBuild
  cp -f ./nvidia-driver/* ./
  # Empezamos compilando el kernel
  echo 
  echo "$VERDE"Compilando kernel nvidia ..."$CIERRE"
  sleep 1
  sh ./nvidia-kernel/nvidia-kernel.SlackBuild
  # Ahora compilamos el driver
  echo 
  echo "$VERDE"Compilando drivers nvidia ..."$CIERRE"
  sleep 1
  sh ./nvidia-driver/nvidia-driver.SlackBuild
  # Limpiamos los archivos temporales durante la compilacion
  #rm -f nvidia*
  rm -f /tmp/nvidia*.tgz
  # Copiamos todo para hacer el modulo
  cp -Rf /tmp/SBo/package-nvidia-driver/ $PKG
  cp -Rf /tmp/SBo/package-nvidia-kernel/ $PKG
  rm -rf /tmp/SBo
  rm -rf $PKG/install
}

###################################
## BLOQUE PRINCIPAL DE EJECUCION ##
###################################
# Si se cierra el script inesperadamente, ejecutar la funcion de limpieza
trap f_exitmode SIGHUP SIGINT

#Inicializamos las variables globales
f_variables
#Comprobamos conexion a Internet
f_comprobarConexion
#Inicializamos las variables del script
F_variables
#Creamos directorio de trabajo
f_directorioTemporal
#Mostramos el mensaje de presentacion
f_presentacion
#Comprobamos updates del script
f_comprobarUpdates
#Asignamos o detectamos arquitectura
f_arquitectura
#Comprobamos version instalada del paquete
f_versionInstalada
#Descargamos los sources
F_download
#Descomprimir fichero descargado y compilamos
F_compilar
#Hacemos strip sobre el paquete
f_strip
#Creamos xzm , instalamos y salimos
f_tareasFinales