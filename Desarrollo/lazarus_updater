#!/bin/sh

# Script by www.seguridadwireless.net

SCRIPT_VERSION=20151015

############################################################
## Funciones comunes. Su nombre empieza por f_ ##
############################################################
f_variables(){
	. /opt/wifislax-updaters/Funciones/funciones_updater
}

############################################################
## Funciones propias del script. Su nombre empieza por F_ ##
############################################################
# Definicion de variables
F_variables() {
	PRGNAM=lazarus
	echo -ne "\033]2;${PRGNAM}_updater\007"
	WEB=ftp://freepascal.dfmk.hu/pub/lazarus/releases/Lazarus%20Zip%20_%20GZip/
	VERSION=`curl -s $WEB | grep -v RC | grep Lazarus | tail -1 |rev|cut -d ' ' -f1|rev`
	EXTENSION=tar.gz
	SOURCES=$PRGNAM-$VERSION-0.$EXTENSION
	DOWNLOAD=http://downloads.sourceforge.net/$PRGNAM/$SOURCES
}

# Comprobar dependencias
F_dependencias(){
	DEPEND=fpc
	RUTADEPEND=/usr/bin
	UPDATER=${DEPEND}_updater
	CATEGORIAUPDATER=Desarrollo
	
	if [ -f $RUTADEPEND/$DEPEND ] ;then
		DEPEND_EXIST=`echo "$VERDE"Instalada"$CIERRE"`
		DEPEND_EXIST2=SI
	else
		DEPEND_EXIST=`echo "$ROJO"No Instalada"$CIERRE"`
		DEPEND_EXIST2=NO
	fi
	
	echo "$ROSA"Comprobando dependencias ..."$CIERRE"
	echo
	sleep 3
	echo "$CYAN"Dependencias de este paquete:""
	echo ""
	echo "$AMARILLO"$DEPEND"$CIERRE: $DEPEND_EXIST"
	
	if [ $DEPEND_EXIST2 = NO ]; then
		echo "$AMARILLO"
		echo "Resolviendo dependencia $DEPEND ..."
		sleep 3
	if [ ! -f /opt/wifislax-updaters/$CATEGORIAUPDATER/${DEPEND}_updater ]; then
		echo $ROJO
		echo "No tienes el updater $DEPEND..."
		sleep 1
		echo "No se puede continuar..."
		sleep 1
		echo "El script se cierra aqui."
		sleep 1
		echo $CIERRE
		exit 0
	fi
		cd /opt/wifislax-updaters/Desarrollo/
		statusfile=$(mktemp)
		xterm -e sh -c 'yes y | /opt/wifislax-updaters/Desarrollo/fpc_updater; echo $? > '$statusfile 
		status=$(cat $statusfile)
		rm $statusfile
		if [ -z $status ] || [ $status != "0" ]; then
		  echo "$ROJO"ERROR. No se ha podido crear el paquete"$CIERRE"
		  if [ -z $status ]; then
		    exit 1
		  else
		    exit $status
		  fi
		fi
		
		cd $TMP
	fi

	# Verificamos que salio bien graphviz_updater
	if [ ! -f $RUTADEPEND/$DEPEND ] ;then
		echo $ROJO
		echo "Algo salio mal al instalar $DEPEND..."
		sleep 1
		echo "No se puede continuar..."
		sleep 1
		echo "El script se cierra aqui."
		sleep 1
		echo $CIERRE
		exit 0
	fi
}

# Descomprimimos el fichero descargado y compilamos
F_compilar(){
LCL=${LCL:-gtk2}
if [ "$LCL" = "qt" ]; then
  OPT="-dUSE_QT_45"
fi

# Compilation doesn't need ./configure
make clean
make  all \
  PREFIX=/usr \
  LCL_PLATFORM=${LCL} \
  OPT=${OPT} || exit 1
make install \
  INSTALL_PREFIX=$PKG/usr \
  INSTALL_MAN_DIR=$PKG/usr/man

# fix links at /usr/bin
( cd $PKG/usr/bin
  ln -sf ../share/lazarus/lazarus
  ln -sf ../share/lazarus/lazbuild
  ln -sf ../share/lazarus/startlazarus
)

# Install desktop file, icon, and mime entry
mkdir -p $PKG/usr/share/{applications,pixmaps,mime/packages}
cat install/lazarus.desktop > $PKG/usr/share/applications/lazarus.desktop
cat images/ide_icon48x48.png > $PKG/usr/share/pixmaps/lazarus.png
cat install/lazarus-mime.xml > $PKG/usr/share/mime/packages/lazarus-mime.xml
}


###################################
## BLOQUE PRINCIPAL DE EJECUCION ##
###################################
# Si se cierra el script inesperadamente, ejecutar la funcion de limpieza
trap f_exitmode SIGHUP SIGINT

#Inicializamos las variables globales
f_variables
#Comprobamos conexion a Internet
f_comprobarConexion
#Inicializamos las variables del script
F_variables
#Creamos directorio de trabajo
f_directorioTemporal
#Mostramos el mensaje de presentacion
f_presentacion
#Comprobamos updates del script
f_comprobarUpdates
#Asignamos o detectamos arquitectura
f_arquitectura
#Comprobamos version instalada del paquete
f_versionInstalada
#Compronar dependencias
F_dependencias
#Si no existe el fichero se descargara
f_download
#Preparando entorno
f_preparar
#Descomprimir fichero descargado y compilamos
F_compilar
#Hacemos strip sobre el paquete
f_strip
#Creamos xzm , instalamos y salimos
f_tareasFinales
