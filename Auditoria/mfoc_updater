#!/bin/bash

# Script by www.seguridadwireless.net

SCRIPT_VERSION=20150906

############################################################
## Funciones comunes. Su nombre empieza por f_ ##
############################################################
f_variables(){
	. /opt/wifislax-updaters/Funciones/funciones_updater
}

############################################################
## Funciones propias del script. Su nombre empieza por F_ ##
############################################################
#Definicion de variables
F_variables() {
	PRGNAM=mfoc
	WEB="https://raw.githubusercontent.com/nfc-tools/mfoc/master/configure.ac"
	echo -ne "\033]2;${PRGNAM}_updater\007"
	DOWNLOAD="https://github.com/nfc-tools/mfoc.git"
	VERSION=$(curl -s "$WEB" | grep AC_INIT | cut -d, -f 2 | cut -d[ -f2 | cut -d] -f1 )

}

# Comprobar dependencias
F_dependencias(){
	echo 
	if ls /usr/lib/libnfc.so* 2>/dev/null >/dev/null; then
	  EXIST=`echo "$VERDE"Instalada"$CIERRE"`
	else
	  EXIST=`echo "$ROJO"No Instalada"$CIERRE"`
	fi
	
	echo "$ROSA"Comprobando dependencias ..."$CIERRE"
	echo
	sleep 3
	echo "$CYAN"Dependencias de este paquete:""
	echo ""
	echo "$AMARILLO"libnfc"$CIERRE: $EXIST"
	
	
	if ! ls /usr/lib/libnfc.so* 2>/dev/null >/dev/null; then
		echo ""
		echo ""$ROJO"No se cumplen los requisitos"$CIERRE"... "$VERDE"resolviendo"$CIERRE"..."
		sleep 3
		cd /opt/wifislax-updaters/Librerias/
		statusfile=$(mktemp)
		xterm -e sh -c '/opt/wifislax-updaters/Librerias/libnfc_updater; echo $? > '$statusfile 
		status=$(cat $statusfile)
		rm $statusfile
		if [ -z $status ] || [ $status != "0" ]; then
		  echo "$ROJO"ERROR. No se ha podido crear el paquete"$CIERRE"
		  if [ -z $status ]; then
		    exit 1
		  else
		    exit $status
		  fi
		fi
		
		cd $TMP
	fi

	echo ""
	echo "$VERDE"Bien ..podemos continuar"$CIERRE"
	echo ""
	sleep 3
}

# Si el paquete no existe se descargara de internet
F_descargaPaquete() {
	echo ""
	echo "$CYAN"Descargando sources de $PRGNAM-$VERSION"$CIERRE"
	sleep 3
	git clone $DOWNLOAD
}

#Descomprime el fichero descargado
F_descomprime() {
	echo ""
	cd $PRGNAM
	chown -R root:root .
	find -L . \
	\( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
	  -o -perm 511 \) -exec chmod 755 {} \; -o \
	\( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
	-o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;
}

#Configurando
F_compilar() {
echo ""
echo "$VERDE"Configurando ..."$CIERRE"
sleep 3
autoreconf -vis
CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/usr \
  --sysconfdir=/etc \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --mandir=/usr/man \
  --docdir=/usr/doc/$PRGNAM-$VERSION \
  --build=$ARCH-slackware-linux

make  || exit 1
make install DESTDIR=$PKG

}


###################################
## BLOQUE PRINCIPAL DE EJECUCION ##
###################################
# Si se cierra el script inesperadamente, ejecutar la funcion de limpieza
trap f_exitmode SIGHUP SIGINT

#Inicializamos las variables globales
f_variables
#Comprobamos conexion a Internet
f_comprobarConexion
#Inicializamos las variables del script
F_variables
#Creamos directorio de trabajo
f_directorioTemporal
#Mostramos el mensaje de presentacion
f_presentacion
#Comprobamos updates del script
f_comprobarUpdates
#Comprobar dependencias
F_dependencias
#Asignamos o detectamos arquitectura
f_arquitectura
#Comprobamos version instalada del script
f_versionInstalada
#Descargamos el paquete si no existe
F_descargaPaquete
#Descomprimimos el paquete descargado 
F_descomprime
#Compilamos el paquete
F_compilar
#Hacemos strip sobre el paquete
f_strip
#Creamos xzm , instalamos y salimos
f_tareasFinales