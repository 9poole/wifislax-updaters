#!/bin/sh

# Script by www.seguridadwireless.net

SCRIPT_VERSION=20151020

############################################################
## Funciones comunes. Su nombre empieza por f_ ##
############################################################
f_variables(){
	. /opt/wifislax-updaters/Funciones/funciones_updater
}

############################################################
## Funciones propias del script. Su nombre empieza por F_ ##
############################################################
# Definicion de variables
F_variables() {
	PRGNAM=jre
	echo -ne "\033]2;${PRGNAM}_updater\007"
	WEB=$(curl -s http://www.oracle.com/technetwork/java/javase/downloads/jre8-downloads-2133155.html | grep -E i586.tar.gz | grep linux | cut -d ":" -f4- | cut -d "\"" -f2|tail -1)
	ARCHIVO=${WEB##*/}
	VERSION=$(echo $ARCHIVO | cut -d "-" -f 2)
}

# Si el paquete no existe se descargara de internet
F_download(){
echo ".oracle.com	TRUE	/	FALSE	1906724535	oraclelicense	accept-securebackup-cookie">cookie
	if [ ! -f $ARCHIVO ]; then
		echo ""
		echo "$CYAN"Descargando sources de $PRGNAM-$VERSION"$CIERRE"
		sleep 3
		aria2c -x 3 --load-cookies=cookie $WEB
	fi
}

# Empezamos a crear el paquete
F_crearpaquete(){
	echo ""
	echo "$VERDE"Descomprimiendo ..."$CIERRE"
	sleep 3

	mkdir -p $PKG/usr/java/ $PKG/etc/profile.d $PKG/usr/lib/mozilla/plugins/ $PKG/usr/lib/java $PKG/usr/share/applications
	tar -xvf $ARCHIVO -C $PKG/usr/java/
	cleandir $PKG

cd $PKG
echo "#!/bin/csh
setenv JAVA_HOME /usr/lib/java
setenv MANPATH \${MANPATH}:\${JAVA_HOME}/man
setenv PATH \${PATH}:\${JAVA_HOME}/bin:\${JAVA_HOME}/jre/bin" >$PKG/etc/profile.d/jre.csh

echo "#!/bin/sh
export JAVA_HOME=/usr/lib/java
export MANPATH=\"\${MANPATH}:\${JAVA_HOME}/man\"
export PATH=\"\${PATH}:\${JAVA_HOME}/bin:\${JAVA_HOME}/jre/bin\"" >$PKG/etc/profile.d/jre.sh
	chmod +x $PKG/etc/profile.d/jre.sh
	chmod +x $PKG/etc/profile.d/jre.csh

	mv $PKG/usr/java/jre*/* $PKG/usr/lib/java/
	ln -s $PKG/usr/lib/java/ $PKG/usr/lib/$(ls $PKG/usr/java/ | cut -d "/" -f1)
	rm -Rf $PKG/usr/java


	ln -s /usr/lib/java/lib/i386/libnpjp2.so $PKG/usr/lib/mozilla/plugins/libnpjp2.so
	ln -s /usr/lib/java/lib/i386/server/libjvm.so $PKG/usr/lib/libjvm.so
	ln -s /usr/lib/jvm/bin/javac $PKG/usr/lib/java/bin/javac
	sleep 3

# Entrada a escritorio
echo "[Desktop Entry]
Exec=/usr/lib/java/bin/jcontrol
Icon=sun-jcontrol
Name[es]=Java Control Panel
Name=Java Control Panel
Categories=Settings
StartupNotify=false
Terminal=false
Type=Application" >$PKG/usr/share/applications/sun_java.desktop

# Copiamos iconos y mimetypes
cp -rf $PKG/usr/lib/java/lib/desktop/mime $PKG/usr/share/
cp -rf $PKG/usr/lib/java/lib/desktop/icons $PKG/usr/share/
}

###################################
## BLOQUE PRINCIPAL DE EJECUCION ##
###################################
# Si se cierra el script inesperadamente, ejecutar la funcion de limpieza
trap f_exitmode SIGHUP SIGINT

#Inicializamos las variables globales
f_variables
#Comprobamos conexion a Internet
f_comprobarConexion
#Inicializamos las variables del script
F_variables
#Creamos directorio de trabajo
f_directorioTemporal
#Mostramos el mensaje de presentacion
f_presentacion
#Comprobamos updates del script
f_comprobarUpdates
#Asignamos o detectamos arquitectura
f_arquitectura
#Comprobamos version instalada del script
f_versionInstalada
#Si no existe el fichero se descargara
F_download
# Empezamos a crear el paquete
F_crearpaquete
#Hacemos strip sobre el paquete
f_strip
#Creamos xzm , instalamos y salimos
f_tareasFinales