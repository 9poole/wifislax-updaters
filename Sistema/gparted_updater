#!/bin/sh

# Script by www.seguridadwireless.net

SCRIPT_VERSION=20150906

############################################################
## Funciones comunes. Su nombre empieza por f_ ##
############################################################
f_variables(){
	. /opt/wifislax-updaters/Funciones/funciones_updater
}

############################################################
## Funciones propias del script. Su nombre empieza por F_ ##
############################################################
# Definicion de variables
F_variables() {
	WEB=http://sourceforge.net/projects/gparted/files/gparted/
	VERSION=`curl -s $WEB | grep '<tr title="gparted-' | head -1 | sed 's/<tr title="gparted-//g' | sed 's/" class="folder ">//g' | sed "s/ //g"`
	PRGNAM=gparted
	echo -ne "\033]2;${PRGNAM}_updater\007"
}

# Si el paquete no existe se descargara de internet
F_download(){
	if [ ! -f $PRGNAM-$VERSION.tar.bz2 ]; then
		echo ""
		echo "$CYAN"Descargando sources de $PRGNAM-$VERSION"$CIERRE"
		sleep 3
		aria2c -x 3 $WEB/$PRGNAM-$VERSION/$PRGNAM-$VERSION.tar.bz2
	fi
}

# Descomprimimos el fichero descargado
F_descomprimir(){
	echo ""
	echo "$VERDE"Descomprimiendo ..."$CIERRE"
	sleep 3
	tar xvf $PRGNAM-$VERSION.tar.bz2
}

F_compilar(){
	cd $PRGNAM-$VERSION
	chown -R root:root .
	find -L . \
	\( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 -o -perm 511 \) \
	-exec chmod 755 {} \; -o \
	\( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
	-exec chmod 644 {} \;


	sed -i "s:@gksuprog@ @installdir@/gparted %f:@installdir@/gparted_polkit %f:g" \
	gparted.desktop.in.in
	
	echo ""
	echo "$VERDE"Configurando ..."$CIERRE"
	sleep 3
	
	CFLAGS="$SLKCFLAGS" \
	CXXFLAGS="$SLKCFLAGS" \
	./configure \
	  --prefix=/usr \
	  --sysconfdir=/etc \
	  --localstatedir=/var \
	  --mandir=/usr/man \
	  --disable-doc \
	  --build=$ARCH-slackware-linux
	  
	echo ""
	echo "$VERDE"Compilando ..."$CIERRE"
	sleep 3
	
	make  || exit 1
	make install-strip DESTDIR=$PKG
}

# Generamos ficheros necesarios
F_extras(){
cat > com.slackware.pkexec.gparted.policy << "EOF"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE policyconfig PUBLIC
"-//freedesktop//DTD PolicyKit Policy Configuration 1.0//EN"
"http://www.freedesktop.org/standards/PolicyKit/1/policyconfig.dtd">
<policyconfig>
<action id="com.slackware.pkexec.gparted">
<message>Authentication is required to run the GParted Partition Editor</message>
<icon_name>gparted</icon_name>
<defaults>
<allow_any>auth_admin</allow_any>
<allow_inactive>auth_admin</allow_inactive>
<allow_active>auth_admin</allow_active>
</defaults>
<annotate key="org.freedesktop.policykit.exec.path">/usr/sbin/gparted</annotate>
<annotate key="org.freedesktop.policykit.exec.allow_gui">true</annotate>
</action>
</policyconfig>
EOF

cat > gparted_polkit << "EOF"
#!/bin/bash
if [ $(which pkexec) ]; then
	pkexec --disable-internal-agent "/usr/sbin/gparted" "$@"
else
	/usr/sbin/gparted "$@"
fi
EOF

# Instalamos la regla polkit
install -Dm0644 com.slackware.pkexec.gparted.policy \
$PKG/usr/share/polkit-1/actions/com.slackware.pkexec.gparted.policy

install -Dm0755 gparted_polkit \
$PKG/usr/sbin/gparted_polkit
}

###################################
## BLOQUE PRINCIPAL DE EJECUCION ##
###################################
# Si se cierra el script inesperadamente, ejecutar la funcion de limpieza
trap f_exitmode SIGHUP SIGINT

#Inicializamos las variables globales
f_variables
#Comprobamos conexion a Internet
f_comprobarConexion
#Inicializamos las variables del script
F_variables
#Creamos directorio de trabajo
f_directorioTemporal
#Mostramos el mensaje de presentacion
f_presentacion
#Comprobamos updates del script
f_comprobarUpdates
#Asignamos o detectamos arquitectura
f_arquitectura
#Comprobamos version instalada del script
f_versionInstalada
#Si no existe el fichero se descargara
F_download
#Descomprimir fichero descargado
F_descomprimir
#Creamos la entrada al menu
F_compilar
#Generamos ficheros necesarios
F_extras
#Creamos xzm , instalamos y salimos
f_tareasFinales
